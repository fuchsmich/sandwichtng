--[[ interface for calculating a Sandwich beam (c) 2013 Michael Fuchs 
@TODO:
* grafischen input wiederherstellen (input.tng)
* Rollschub tau ~ 1,1 N/mm² ???
* Langezeit Durchbiegung
* Spannungen mit gamma_d
* Nachweise
		ULS
		*Normalspannung Holz
		*Biegespannung Holz
		*Rollschubspannung Holz
		*Schubspannung Velox (falls keine Schrauben bzw. im Bereich wo keine Schrauben)
		*Belastung SChrauben
		SLS
		*Langzeitdurchbiegung
@DID
* output (print und plot) in output.tng
]]--

dofile("fem.tng")
dofile("output.tng")

function kirchmayer()
-- Großversuche Kirchmayer=======================================================
	l = 4.8
	b = 0.42
	hb = tmath.Matrix({{6.8e-2, b}, {7.5e-2, b}, {5.7e-2, b}})
	-- - Material
	moe = tmath.Matrix({{19560e6}, {1000e6}, {11600e6}}) -- MoE [N/m²]
	mos = tmath.Matrix({{moe[0]/2/(1+0.2)}, {15e6}, {690e6}}) --MoS [N/m²]
	rho = tmath.Matrix({{2400}, {750}, {470}}) --density [kg/m³]
	k_ser = tmath.Matrix({{0},{0}}) --Federstefigkeit der Fuge (0 = oo)
	
	-- - Lasten
	q = 0 -- variable load [N/m²]
	dl_factor = 0 -- factor for dead load
	Fx = tmath.Matrix({{0.5, 10e3}}) -- single load at F[{i,0}]*l of magnitude F[{i,1}]
end

function bauteilversuchBSH()
-- Bauteilversuch Hofer/Fuchs
	l = 7.2
	b = 0.5
	hb = tmath.Matrix({{6e-2, b}, {15e-2, b}, {11.8e-2, b}})
	-- - Material
	moe = tmath.Matrix({{19560e6}, {1000e6}, {11600e6}}) -- MoE [N/m²]
	mos = tmath.Matrix({{moe[0]/2/(1+0.2)}, {15e6}, {690e6}}) --MoS [N/m²]
	rho = tmath.Matrix({{2400}, {750}, {500}}) --density [kg/m³]
	k_ser = tmath.Matrix({{0},{0}}) --Federstefigkeit der Fuge (0 = oo)
	-- - Lasten
	gamma_g = 1.35
	gamma_q = 1.5
	q = 3e3*b*gamma_q -- variable load [N/m]
	dl_factor = gamma_g -- factor for dead load
	-- Fx = tmath.Matrix({{0.25, q*l/2}, 
										 -- {0.75, q*l/2}}) -- single load at F[{i,0}]*l of magnitude F[{i,1}]
	-- q = 0
end

function bauteilversuchBSP()
	l = 7.2
	b = 0.5
	hb = tmath.Matrix({{6e-2, b}, 
										{15e-2, b}, 
										{3.9e-2, b}, 
										{4e-2, b}, 
										{3.9e-2, b}})
	-- - Material
	moe = tmath.Matrix({{19560e6}, 
											{1000e6}, 
											{11600e6}, 
											{370e6}, 
											{11600e6}}) -- MoE [N/m²]
	mos = tmath.Matrix({{moe[0]/2/(1+0.2)}, 
											{15e6}, 
											{690e6}, 
											{50e6}, 
											{690e6}}) --MoS [N/m²]
	rho = tmath.Matrix({{2400}, 
											{750}, 
											{500}, 
											{500}, 
											{500}}) --density [kg/m³]
	k_ser = tmath.Matrix({{0},
												{0},
												{0},
												{0}}) -- [N/m^2]
-- Schrauben
-- k_ser1 einer Schraube [N/m] (aus Schubversuch):
	k_ser1 = 2.12e7
	n_screw = 3
	l_screw = 1.5
	e_y_screw = 0.25
-- - Lasten
	gamma_g = 1.35
	gamma_q = 1.5
	q = 3e3*b*gamma_q -- variable load [N/m]
	dl_factor = gamma_g -- factor for dead load
	Fx = nil -- single load at F[{i,0}]*l of magnitude F[{i,1}]
end

function sabine()
	l = 5
	b = 1
	hb = tmath.Matrix({{6e-2, b}, 
										{10e-2, b}, 
										{6.2e-2, b}})
	-- - Material
	moe = tmath.Matrix({{19560e6}, 
											{1000e6}, 
											{11600e6}}) -- MoE [N/m²]
	mos = tmath.Matrix({{moe[0]/2/(1+0.2)}, 
											{15e6}, 
											{720e6}}) --MoS [N/m²]
	rho = tmath.Matrix({{2400}, 
											{750}, 
											{500}}) --density [kg/m³]
	k_ser = tmath.Matrix({{0},
												{0}}) --Federstefigkeit der Fuge (0 = oo) [N/m^2]
	-- - Lasten
	gamma_g = 1.35
	gamma_q = 1.5
	q = 2e3*b*gamma_q -- variable load [N/m]
	dl_factor = gamma_g -- factor for dead load
	Fx = nil
end

function dominik()
	l = 8.10
	b_Holz = 0.675
	hb = tmath.Matrix({{80e-3, 675e-3}, 
										{280e-3, b_Holz}})
	-- - Material
	moe = tmath.Matrix({{28300e6}, 
											{12600e6}}) -- MoE [N/m²]
	mos = tmath.Matrix({{moe[0]/2/(1+0.2)}, 
											{720e6}}) --MoS [N/m²]
	rho = tmath.Matrix({{2400}, 
											{500}}) --density [kg/m³]
	K_ser_Kerve = 1136e6   -- [N/m^2]
	s_eff_Kerve = 1.57   -- [m]
	k_ser = tmath.Matrix({{K_ser_Kerve*b_Holz/s_eff_Kerve}}) --Federstefigkeit der Fuge (0 = oo) [N/m^2]
	-- - Lasten
	q = 4e3 -- variable load [N/m]
	dl_factor = 1 -- factor for dead load
	Fx = nil
end

<<<<<<< HEAD

-- Werte aufrufen:
bauteilversuchBSH()
-- sabine()
=======
-- Werte laden:
-- bauteilversuchBSH()
dominik()
>>>>>>> b8123e5e959698ef408cd48a661419f2d5521aa7
-- ==== Berechnung und Ausgabe =================
layers = hb:AppendCols(moe)
layers = layers:AppendCols(mos)
layers = layers:AppendCols(rho)
kser = tmath.Matrix(layers:Rows() - 1, 2)
kser:SetZero()
kser = kser:AppendCols(k_ser)
-- zur Kontrolle:
print(string.format("EA_a = %.0f N\nGA_a = %.0f N\nEI_a = %.0f N*m²", stiffnessBeamA(layers)))
print(string.format("EA_b = %.0f N\nGA_b = %.0f N\nEI_b = %.0f N*m²\n", stiffnessBeamB(layers, kser)))

SA_init(l)
setLayers(layers, kser)
setLoads(dl_factor, q)
calcStructure()
u_x, u_max = getDisplacements()


sig = getStresses(0.5)
-- print(sig/1e6)
plotNormalStress(sig, layers)

tau = getStresses(0)
-- print(tau/1e6)
plotShearStress(tau, layers)

printResults(u_max, sig, tau)

-- printResults(u_max, sig)
-- plotDisplacement(u_x)
-- plotNormalStress(getStresses(0.5), layers)
-- drawResults(u_max, sig)
-- korrekte Loesung... für Versuchsbalken??
-- 
-- u_max	0.011130073811788
-- sig: Matrix 3x3
-- -3.4997e+006	-1.2254e+006	-21881	
-- -166544	124139	3078.89	
-- -98039.1	2.55454e+006	62218.8	
